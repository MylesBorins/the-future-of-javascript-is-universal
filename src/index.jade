doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title The Future of JavaScript is Universal

    link(rel='stylesheet', type='text/css', href='build/build.css')

  style.
    .hello {
      background-image: url('images/hello-tharr.gif')
    }
    .future {
      background-image: url('images/future.gif')
    }
    .wrong {
      background-image: url('images/wrong.gif')
    }
    .universal {
      background-image: url('images/universal.gif')
    }
    .complicated {
      background-image: url('images/complicated.gif')
    }
    .galaxy {
      background-image: url('images/galaxy.gif')
    }
    .soup {
      background-image: url('images/soup.gif')
    }
    .lava {
      background-image: url('images/lava.gif')
    }
    .separation {
      background-image: url('images/separation.gif')
    }
    .dread {
      background-image: url('images/dread.gif')
    }

  body

    article

      section
        h2 The Future of JavaScript
        h2 Is Universal
        h3 With your host
        h4
          a(href='https://twitter.com/MylesBorins') @MylesBorins
        p  Node+JS Interactive 2019
        
      section(data-bespoke-backdrop='hello')
        h1 Bonjour
        
      section
        h1 My Name is Myles
        img.headroom(src='images/me.jpg' alt='itsa me!' width='200px' height='200px')
      
      section
        h3 I am gainfully employed by Google as a Developer Advocate
        h4 Focusing on the Node.js ecosystem and GCP
        
        img(src='images/gcp.png' alt='Google Cloud Platform' style='background-color:white;')
        
        h5.headroom The opinions expressed in this talk are solely my own

      //- section(data-bespoke-backdrop='future')
      //-   h3 The opinions expressed in this talk
      //-   h2 might be the future

      section(data-bespoke-backdrop='wrong')
        h3 The opinions expressed in this talk
        h2 might be wrong

      section
        h3 The opinions expressed in this talk
        h2 are definitely opinions

      section(data-bespoke-backdrop='galaxy')
        h1 What is Universal JavaScript?

      section
        img(src="images/universal-01.png" width="70%")

      section
        img(src="images/universal-02.png" width="70%")

      section
        img(src="images/universal-03.png" width="70%")
      
      section
        img(src="images/universal-04.png" width="70%")

      section
        img(src="images/universal-05.png" width="70%")

      section
        img(src="images/universal-06.png" width="70%")

      section
        img(src="images/universal-07.png" width="70%")
      
      section
        img(src="images/universal-08.png" width="70%")

      section
        img(src="images/universal-09.png" width="70%")

      section
        img(src="images/universal-10.png" width="70%")

      section
        h3 Is this different than
        h2 Isomorphic JavaScript

      section
        h1 Yes!

      section
        img(src="images/isomorphic.png" width="70%")

      section
        h3 Universal JavaScript
        h2 Write once, run anywhere.

      section
        h3 Universal JavaScript seems great
        h2 Tell me more

      section
        h3 There are many JavaScript runtimes
        ul
          li.hide
          li Browsers
          li Node.js
          li Deno
          li Edge Workers
          li Moddable
          li Databases
          li Productivity Software

      section
        h2 ðŸŽ‰ They share parts ðŸŽ‰

      section
        h2 TC39
        h3 Specifies the baseline
        h2 ECMA262
      
      section(data-bespoke-backdrop='lava')
        h3 Realms, Intrinsics, and Primordials

      section
        h3 Primordials
        ul
          li.hide
          li Array
          li Number
          li Object
          li Function

      section
        h3 Namespace Objects
        ul
          li.hide
          li JSON
          li Math
          li Reflect
          li Date

      section
        h1 ES Modules

      section
        h3 Modules have been the missing piece to 
        h2 Enable Universal Modules

      section
        h2 The Loader is not specified
        h3 Implemented by embedder

      section
        h3 TC39 Leaves it up to hosting environment
        h2 To determine Resolution

      section
        h3 It is up to the runtime to
        ul
          li.hide
          li Turn the reference into a location
          li Fetch a resource from that location
          li Do this recursively to build a graph
          li Give the engine the graph to execute

      section(data-bespoke-backdrop='separation')
        h1 Platform Divergence

      section(data-bespoke-backdrop='dread')
        h3 A healthy source of
        h2 Existential Dread

      section(data-bespoke-backdrop='complicated')
        h3 Can have a side effect of
        h2 Nihilistic transpilation

      section
        h3 Are various JavaScript Platforms
        h2 Fundamentally Different?

      section
        h3 They can have drastically
        h2 Different APIs

      section
        h2 Is the browser
        h3 Fundamentally different
        h2 From Node.js

      section(data-bespoke-backdrop='soup')
        h1 No, they come from the same soup.

      section
        h3 In fact Node.js has adopted
        h2 Many APIS designed for browsers

      section
        h1 WHATWG

      section
        h3 Are WHATWG standards are browser specific?
        ul
          li.hide
          li HTML
          li DOM

      section
        h3 What WHATWG standards are available in both runtimes?
        ul
          li.hide
          li console
          li url
          li Encoder API

      section
        h3 Which standards are being explored by Node.js?
        ul
          li.hide
          li fetch
          li WHATWG Streams

      section
        h2 The interface vs. Plumbing

      section
        h1 Where does the platform begin?

      section
        h1 Where does the platform end?

      section
        h3 Perhaps Universal JavaScript
        h2 Is a platform concern

      section
        h1 JSON Modules

      section
        h1 Inspired by Node.js

      section
        h1 Specified at WHATWG

      section
        h1 Rejected at TPAC

      section
        h1 Module attributes at TC39

      section
        h2 Universal
        h3 as a platform ethos

      section
        h3 Universal JavaScript at TC39
        ul
          li.hide
          li Built in Modules
          li Standard Library
          li Module Attributes

      section
        h3 Universal JavaScript at WHATWG
        ul
          li.hide
          li JSON Modules

      section
        h3 Universal JavaScript at W3C
        ul
          li.hide
          li import maps
          li WASI
        
      section
        h3 How do we find
        h2 a shared vision?

      section
        h2 Where do we collaborate?

      section
        h3 Are various JavaScript Platforms
        h2 Fundamentally Different?

      section
        h3 Developers shouldn't have to know
        h2 Beyond an API

      section
        h3 Developer's skills
        h2 should be portable

      section
        h3 Universal
        h2 Needs to be a platform concern
        h3 Not a Development target

      section
        h2 Universal
        h3 Is a goal, not a technique

      section
        h3 The Future of JavaScript
        h2 Is Universal
        h3 If JavaScript is to have a future

      section
        h2 Thank You
        img.headroom(src='images/best-gif-evar.gif' alt='a surfing puppy' width='20%')
        h4 @MylesBorins

    script(src='build/build.js')
